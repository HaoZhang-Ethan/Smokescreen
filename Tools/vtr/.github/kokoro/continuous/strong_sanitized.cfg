# Format: //devtools/kokoro/config/proto/build.proto

build_file: "vtr-verilog-to-routing/.github/kokoro/run-vtr.sh"

# 4 hour
timeout_mins: 240

action {
  define_artifacts {
    # File types
    regex: "**/*.out"
    regex: "**/vpr_stdout.log"
    regex: "**/parse_results.txt"
    regex: "**/qor_results.txt"
    regex: "**/pack.log"
    regex: "**/place.log"
    regex: "**/route.log"
    regex: "**/*_qor.csv"
    regex: "**/*.out.gz"
    regex: "**/vpr_stdout.log.gz"
    regex: "**/parse_results.txt.gz"
    regex: "**/qor_results.txt.gz"
    regex: "**/pack.log.gz"
    regex: "**/place.log.gz"
    regex: "**/route.log.gz"
    regex: "**/*_qor.csv.gz"

    strip_prefix: "github/vtr-verilog-to-routing/"
  }
}

env_vars {
  key: "KOKORO_TYPE"
  value: "continuous"
}

env_vars {
  key: "KOKORO_DIR"
  value: "vtr-verilog-to-routing"
}

env_vars {
  key: "VTR_DIR"
  value: "vtr-verilog-to-routing"
}

#VTR build configuration options:
# -DVTR_ASSERT_LEVEL=3: Enable extra assertion checking
# -DVTR_ENABLE_SANITIZE=ON: Enable compiler sanitizers (check for memory issues, undefined behaviour, etc.)
env_vars {
  key: "VTR_CMAKE_PARAMS"
  value: "-DVTR_ASSERT_LEVEL=3 -DVTR_ENABLE_SANITIZE=ON"
}

env_vars {
  key: "VTR_TEST"
  value: "vtr_reg_strong"
}

#Options for run_reg_test.py
# -show_failures: show tool failures in main log output
# -skip_qor: Skip QoR checks (since we expect run-time failures due to sanitizers)
env_vars {
  key: "VTR_TEST_OPTIONS"
  value: "-show_failures -skip_qor"
}

env_vars {
  key: "NUM_CORES"
  value: "8"
}
